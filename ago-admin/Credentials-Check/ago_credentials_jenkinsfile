agent_label = "algorab"

pipeline {
    agent {
       label "${agent_label}"
    }
    
    triggers {
        cron('*/15 8-8 * * *')
    }
    
    options {
        buildDiscarder(logRotator(daysToKeepStr: '7'))
        disableConcurrentBuilds()
        timeout(time: 1, unit: 'HOURS')
    }

    environment {
        PYTHON_PATH  = credentials('ARCPRO_PYTHON_PATH')
        NETWORK_PATH = credentials('GEOPY_ARCPRO_TOOLS_PATH')
        BIER_PATH = "${NETWORK_PATH}" + '/BIER/'
        SCRIPT_PATH = "${NETWORK_PATH}" + '/BIER/prod/AGO-Admin/Credentials-Check/AGO_Credentials_Check.py'
        MAIL_LIST = 'michael.dykes@gov.bc.ca'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                bat '"%PYTHON_PATH%" -m pip install -r https://raw.githubusercontent.com/bcgov/geobc-bier/main/AGO-Admin/Credentials-Check/requirements.txt'
            }
        }
        
        stage('Run Script') {
            steps {
                withCredentials([
                    usernamePassword(credentialsId: 'GEOHUB_COP', usernameVariable: 'AGO_USER', passwordVariable: 'AGO_PASS')])
                {bat '"%PYTHON_PATH%" "%SCRIPT_PATH%" "%AGO_USER%" "%AGO_PASS%"'}
            }
        }
    }
    
    post {
        failure {
            mail to: MAIL_LIST, from: 'GeoBCJenkins@GeoBC.com',
                subject: "Job Failed: ${env.JOB_NAME}", 
                body: "Job Failed - \"${env.JOB_NAME}\" build: ${env.BUILD_NUMBER}\n\nView the log at:\n ${env.BUILD_URL}"
            }
        aborted {
            mail to: MAIL_LIST, from: 'GeoBCJenkins@GeoBC.com',
                subject: "Job Aborted: ${env.JOB_NAME}", 
                body: "Job Aborted - \"${env.JOB_NAME}\" build: ${env.BUILD_NUMBER}\n\nView the log at:\n ${env.BUILD_URL}"
            }
        }
}
